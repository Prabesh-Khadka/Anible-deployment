##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

proxy_busy_buffers_size 512k;
proxy_buffers 4 512k;
proxy_buffer_size 256k;

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;

		proxy_pass http://localhost:5000;	
	}
	#location / {
	#	proxy_pass http://127.0.0.1:9093/;
	#}

}


server {
	listen 443 ssl;
	server_name identity.bitskraft.com;
	#listen [::]:443 ssl http2 default_server
	
       ssl_certificate          /etc/nginx/STAR_bitskraft_com.crt;
       ssl_certificate_key      /etc/nginx/new.bitskraft.com.key;
	
	#ssl_certificate          /etc/nginx/identity.digiconnect.com.np.pem;
	#ssl_certificate_key      /etc/nginx/identity.digiconnect.com.np-key.pem;


	#ssl on;
	#ssl_session_cache builtin:1000 shared:SSL:10m;
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
	#ssl_prefer_server_ciphers on
		access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;	
	location / 
	{
	proxy_set_header        Host $host;
	proxy_set_header        X-Real-IP $remote_addr;
	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	#proxy_set_header        X-Forwarded-Proto $scheme;

	proxy_pass              https://localhost:9093;
	#proxy_pass             https://www.google.com;

          
		#try_files $uri $uri/ =404;
	#proxy_read_timeout 90
	#proxy_redirect          http://localhost:9093; # https://mikha-api.jbbl.com.np;
	}      

	location /admin {
		proxy_set_header        Host $host;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		#rewrite /admin(/.*) $1  break;
		proxy_pass https://localhost:9091;
		#proxy_pass http://www.google.com;
	        	
		#try_files $uri $uri/ /index.html;
		#index index.html index.htm index.nginx-debian.html;
	}
}

	#location /admin 
	#proxy_set_header       Host $host;
	#proxy_set_header       X-Real-IP $remote_addr;
	#proxy_set_header       X-Forwarded-For $proxy_add_x_forwarded_for;
	#proxy_set_header       X-Forwarded-Proto $scheme
	#proxy_pass             http://localhost:9091;
	#proxy_read_timeout 90
	#proxy_redirect                 http://localhost:9091 https://mikh-api.jbbl.com.np;
	        #}
